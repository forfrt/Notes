
https://developer.android.com/design/

2018-11-15 08:07 ÏÂÎç

# Layout

## Understanding Layout

Material Design layouts encourage consistency across platforms, environments, and screen sizes by using uniform elements and spacing

----

Principles

1. Predictable

    UIs should use intuitive and predictable layouts, with consistent UI regions and spatial organization.
1. Consistent

    Layouts should use a consistent grid, keylines, and padding.
1. Responsive

    Layouts are adaptive and react to input from the user, device, and screen elements.

----

Structure

Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout. Smaller components, such...
Read More

Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.

Smaller components, such as iconography and typography, can align to a 4dp grid. 

----

## Density & resolution

Screen pixel density and resolution vary depending on the platform.

----

### Pixel density

The number of pixels that fit into an inch is referred to as pixel density.

Screen density variations

High-density screens have more pixels per inch than low-density ones. As a result, UI elements of the same pixel dimensions appear larger on low-density screens,...

----

Calculating pixel density

To calculate screen density, you can use this equation: Screen density = Screen width (or height) in pixels / Screen width (or height) in inches
Read More

To calculate screen density, you can use this equation:

Screen density = Screen width (or height) in pixels / Screen width (or height) in inches

----

### Density independence 

Density independence refers to the uniform display of UI elements on screens with different densities. 

----

Density-independent pixels

Density-independent pixels, written as dp (pronounced “dips”), are flexible units that scale to have uniform dimensions on any screen. They provide a flexible way to...
Read More

Density-independent pixels, written as dp (pronounced “dips”), are flexible units that scale to have uniform dimensions on any screen. They provide a flexible way to accommodate a design across platforms.

Material UIs use density-independent pixels to display elements consistently on screens with different densities.

----

### Pixel density on Android

When developing an Android app, use dp to display elements uniformly on screens with different densities.
Dps and screen density

A dp is equal to one physical pixel on a screen with a density of 160. To calculate dp: dp = (width in pixels *...
Read More

A dp is equal to one physical pixel on a screen with a density of 160.

To calculate dp:

dp = (width in pixels * 160) / screen density


| Screen physical width | Screen density | Screen with in pixels | Screen with in dps |
| 1.5in                 | 120            | 180px                 | 240dp              |
| 1.5in                 | 160            | 240px                 | 240dp              |
| 1.5in                 | 240            | 360px                 | 240dp              |

----

Scalable pixels (sp)

Scalable pixels (sp) serve the same function as density-independent pixels (dp), but for fonts. The default value of an sp is the same as the...
Read More

Scalable pixels (sp) serve the same function as density-independent pixels (dp), but for fonts. The default value of an sp is the same as the default value for a dp.

The primary difference between an sp and a dp is that sp’s preserve a user's font settings. Users who have larger text settings for accessibility will see font sizes match their text size preferences.

----

### Pixel density on iOS

iOS determines density using logical resolution, which measures its units in points.
Logical resolution

With logical resolution, points are scaled using a Native Scale factor, which map to a device's native resolution (in pixels). For example, when designing for...
Read More

With logical resolution, points are scaled using a Native Scale factor, which map to a device's native resolution (in pixels).

For example, when designing for the iPhone X, you would design for a logical resolution of 375 x 812 points. When rendered, elements are processed by the graphics hardware to fill the iPhone X's 1125 x 2436 pixel screen.

----

Units for iOS

When designing for iOS, use points (pts). Learn more:
Read More

When designing for iOS, use points (pts).

Learn more:

- [Apple iOS' Documentation on Displays](https://developer.apple.com/library/content/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/Displays/Displays.html)
- [PaintCode's Guide to iPhone Resolutions](https://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions)

----

### Pixel density on the web 

Logical resolution

Use the device's logical resolution, which scales to the device's screen resolution.

Units for the web

When designing for the web, replace dp with px (for pixel).

----
----

## Responsive layout grid 

The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.

### Columns, gutters, and margins 

The Material Design layout grid is made up of three elements: columns, gutters, and margins.

----

Columns

Content is placed in the areas of the screen that contain columns. Column width is defined using percentages, rather than fixed values, to allow content...

----

Content is placed in the areas of the screen that contain columns.

Column width is defined using percentages, rather than fixed values, to allow content to flexibly adapt to any screen size. The number of columns displayed in the grid is determined by the breakpoint range (a range of predetermined screen sizes) at which a screen is viewed, whether it’s a breakpoint for mobile, tablet, or another size.

[mio-design_assets_1XzRkl-dQpZybJMje81knhzgS24kQkBns_layout-responsive-columns-360.png](./img/Design/mio-design_assets_1XzRkl-dQpZybJMje81knhzgS24kQkBns_layout-responsive-columns-360.png)

On mobile, at a breakpoint of 360dp, this layout grid uses 4 columns.

On tablet, at a breakpoint of 600dp, this layout grid uses 8 columns.

----

Gutters

Gutters are the spaces between columns. They help separate content. Gutter widths are fixed values at each breakpoint range. To better adapt to the screen,...

Gutters are the spaces between columns. They help separate content.

Gutter widths are fixed values at each breakpoint range. To better adapt to the screen, gutter width can change at different breakpoints. Wider gutters are more appropriate for larger screens, as they create more whitespace between columns. 

[mio-design_assets_1X3yLriF6STNMsF_J-G-lPqqWxEsjSGeA_layout-responsive-gutters-360.png](./img/Design/mio-design_assets_1X3yLriF6STNMsF_J-G-lPqqWxEsjSGeA_layout-responsive-gutters-360.png)

On mobile, at a breakpoint of 360dp, this layout grid uses 16dp gutters.

On tablet, at a breakpoint of 600dp, this layout grid uses 24dp gutters.

----

Margins

Margins are the space between content and the left and right edges of the screen.

Margin widths are defined as fixed values at each breakpoint range. To better adapt to the screen, the margin width can change at different breakpoints. Wider margins are more appropriate for larger screens, as they create more whitespace around the perimeter of content. 

[./img/Design/mio-design_assets_1KEfrUmIS_cTjLcQdgmkI6ISccOmF0jMd_layout-responsive-margins-360.png](mio-design_assets_1KEfrUmIS_cTjLcQdgmkI6ISccOmF0jMd_layout-responsive-margins-360.png)

On mobile, at a breakpoint of 360dp, this layout grid uses 16dp margins.

On a small tablet, at a breakpoint of 600dp, this layout grid uses 24dp margins.

----

----

## Grid customization 

The layout grid can be adjusted to meet the needs of both your product and various device sizes.

----

### Customizing gutters

Gutters can be adjusted to create more or less space between the columns of a layout.

[mio-design_assets_1TCxc9N89a-DBkUdkw5hH0A9EI_CAwe8F_layout-custom-gutters-small.gif](./img/Design/mio-design_assets_1TCxc9N89a-DBkUdkw5hH0A9EI_CAwe8F_layout-custom-gutters-small.gif)

This layout grid uses 8dp gutters. The tighter spacing may suggest the images are closely related to one another, so that they are perceived as part of a collection.

[mio-design_assets_1GbLcsNZms8xuGj0lk021Y_jEQLbt6AIA_layout-custom-gutter-large.gif](./img/Design/mio-design_assets_1GbLcsNZms8xuGj0lk021Y_jEQLbt6AIA_layout-custom-gutter-large.gif)

This layout grid uses larger, 32dp gutters to create more separation between columns. The extra space helps each album to be perceived as an individual entity within a collection.

[mio-design_assets_1DFStWNqE_Ljf-d-vgQYmPvSjjlRluWmn_layout-custom-gutters-too-large-dont.gif](./img/Design/mio-design_assets_1DFStWNqE_Ljf-d-vgQYmPvSjjlRluWmn_layout-custom-gutters-too-large-dont.gif)

Don’t.

Don’t make gutters too large, such as the same width as the columns. Too much space doesn’t leave enough room for content and prevents it from appearing unified.

----

### Customizing margins

Margins can be adjusted to create more or less space between content and the edge of the screen. Margins use a fixed value for each...
Read More

Margins can be adjusted to create more or less space between content and the edge of the screen. Margins use a fixed value for each breakpoint.

The ideal length for legibility of body copy is 40-60 characters per line.

[mio-design_assets_1J9Pv-5i1Wj89DbB7g0zQ48ajDoQ5vFhK_layout-custom-margins-small.gif](./img/Design/mio-design_assets_1J9Pv-5i1Wj89DbB7g0zQ48ajDoQ5vFhK_layout-custom-margins-small.gif)

This layout grid uses small, 8dp margins to allow images to take up more space in the layout.

[mio-design_assets_12kF4vPYwxmyorfzFxtJjnTcew_aSTqLG_layout-custom-margins-large.gif](./img/Design/mio-design_assets_12kF4vPYwxmyorfzFxtJjnTcew_aSTqLG_layout-custom-margins-large.gif)

This layout grid uses large, 64dp margins to limit the width of content.

[mio-design_assets_16qws7AanqHdd2PPfIK3o9prx3tZHZIG6_layout-custom-margins-large-dont.gif](./img/Design/mio-design_assets_16qws7AanqHdd2PPfIK3o9prx3tZHZIG6_layout-custom-margins-large-dont.gif)

Don’t.

Don’t make margins so large that there isn’t sufficient room for content.

----

### Gutters and margins

Within the same breakpoint, gutter and margin widths can be different from one another.

[mio-design_assets_1wGaZj7Vtu6jEp7HMKMUQMLDKsHAa0J3r_layout-custom-gutters-margins-different.png](./img/Design/mio-design_assets_1wGaZj7Vtu6jEp7HMKMUQMLDKsHAa0J3r_layout-custom-gutters-margins-different.png)

----

### Horizontal grids

The Material Design layout grid can be customized for touch UIs that scroll horizontally. Columns, gutters, and margins are laid out from left to right,...

The Material Design layout grid can be customized for touch UIs that scroll horizontally. Columns, gutters, and margins are laid out from left to right, rather than top to bottom. The height of the screen determines the number of columns in a horizontal grid.

Horizontally scrolling UIs are uncommon on non-touch and web platforms. 

[mio-design_assets_1AAq1_BQ3wSiRXdrNtUC4oGW5DTjj_-0R_layout-horizontal-grid.png](./img/Design/mio-design_assets_1AAq1_BQ3wSiRXdrNtUC4oGW5DTjj_-0R_layout-horizontal-grid.png)

This horizontal layout grid uses four horizontal columns, for a total layout height of 400dp.

1. Columns
1. Gutters
1. Margins

----

Horizontal grids can be positioned to accommodate different heights, allowing space for app bars or other UI regions at the top.

[mio-design_assets_1H2ZlLV3xFYoUB_PlABC95d0VyhsTIX-a_layout-horizontal-grid-appbar.png](./img/Design/mio-design_assets_1H2ZlLV3xFYoUB_PlABC95d0VyhsTIX-a_layout-horizontal-grid-appbar.png)

This horizontal layout grid starts below the Top App Bar component and uses four horizontal columns at a height of 316dp.

----
----

## Breakpoints 

A breakpoint is the range of predetermined screen sizes that have specific layout requirements. At a given breakpoint range, the layout adjusts to suit the screen size and orientation. 

----

Breakpoint system

Material Design provides responsive layouts based on the following column structures. Layouts using 4-column, 8-column, and 12-column grids are available for use across different screens,...
Read More

Material Design provides responsive layouts based on the following column structures. Layouts using 4-column, 8-column, and 12-column grids are available for use across different screens, devices, and orientations.

Each breakpoint range determines the number of columns, and recommended margins and gutters, for each display size. 

| Breakpoint Range (dp) | Portrait       | Landscape      | Window | Columns | Margins / Gutters* |
| 0 – 359               | small handset  |                | xsmall | 4       | 16                 |
| 360 – 399             | medium handset |                | xsmall | 4       | 16                 |
| 400 – 479             | large handset  |                | xsmall | 4       | 16                 |
| 480 – 599             | large handset  | small handset  | xsmall | 4       | 16                 |
| 600 – 719             | small tablet   | medium handset | small  | 8       | 16                 |
| 720 – 839             | large tablet   | large handset  | small  | 8       | 24                 |
| 840 – 959             | large tablet   | large handset  | small  | 12      | 24                 |
| 960 – 1023            |                | small tablet   | small  | 12      | 24                 |
| 1024 – 1279           |                | large tablet   | medium | 12      | 24                 |
| 1280 – 1439           |                | large tablet   | medium | 12      | 24                 |
| 1440 – 1599           |                |                | large  | 12      | 24                 |
| 1600 – 1919           |                |                | large  | 12      | 24                 |
| 1920 +                |                |                | xlarge | 12      | 24                 |

*Margins and gutters are flexible and don’t need to be of equal size.

----
----

## Grid behavior 

### Fluid grids

Fluid grids use columns that scale and resize content. A fluid grid’s layout can use breakpoints to determine if the layout needs to change dramatically.

[mio-design_assets_1BL9SdFCf9qek6sZVtiOwmbGb5YcuatRy_layout-responsive-grid-behavior-fluid.gif](./img/Design/mio-design_assets_1BL9SdFCf9qek6sZVtiOwmbGb5YcuatRy_layout-responsive-grid-behavior-fluid.gif)

----

### Fixed grids

Fixed grids use columns of a fixed size, with fluid margins to keep content unchanging within each breakpoint range. A fixed grid’s layout can only change at an assigned breakpoint.

[mio-design_assets_1ecGfk1w3yeUP9eck81D3Qh1kSPA_pusx_layout-responsive-grid-behavior-fixed.gif](./img/Design/mio-design_assets_1ecGfk1w3yeUP9eck81D3Qh1kSPA_pusx_layout-responsive-grid-behavior-fixed.gif)

----

### UI regions

A layout is made up of several UI regions, such as side navigation, content areas, and app bars. These regions can display actions, content, or navigation destinations. UI regions should be consistent across devices, while adapting to different breakpoints of different screen sizes.

To increase familiarity across devices, UI elements designed for desktop should be organized in a way that’s consistent with the mobile UI.

[mio-design_assets_0B9msDEx00QXmaldJd3BqU0NJUWc_01-ui-regions.gif](./img/Design/mio-design_assets_0B9msDEx00QXmaldJd3BqU0NJUWc_01-ui-regions.gif)

Layout changes on different-sized screens

----

### Permanent UI regions

Permanent UI regions are regions that can be displayed outside of the responsive grid, like a navigation drawer. These regions cannot be collapsed.

[mio-design_assets_1LCMRi7tODKHMyKFAPm-kz4M4Jy9xnATZ_layout-responsive-uiregions-permenant.png](./img/Design/mio-design_assets_1LCMRi7tODKHMyKFAPm-kz4M4Jy9xnATZ_layout-responsive-uiregions-permenant.png)

When screen space is available, a permanent UI region exposes content.

----

----

## Whiteframes 

Whiteframes are structured layouts that provide a consistent approach to layout, layering, and shadows. They are a starting point, meant to be modified to meet the specific needs of a product. 






















