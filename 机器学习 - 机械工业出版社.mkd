
#机器学习 - 机械工业出版社

##一些学科和它们对机器学习的影响

1. 人工智能
1. 贝叶斯方法
1. 计算复杂性理论
1. 控制论
1. 信息论
1. 哲学
1. 心理学和神经生物学
1. 统计学

##学习问题的标准描述

> 定义: 对于莫楼任务T和性能度量P, 如果一个计算机程序在T上以P衡量的性能随着经验E而自我完善, 那么我们称这个计算机程序在从经验E中学习.

机器人驾驶学习文件:
- 任务T: 通过视觉传感器在四车道高速公路上驾驶
- 性能标准P: 平均无差错行驶里程(差错由人监督裁定)
- 训练经验E: 注释人类驾驶时录制的一系列图像和驾驶指令

##设计一个学习系统

###选择训练经验

1. 训练经验能否为系统的决策提供直接或间接的反馈
1. 学习期可以在多大程度上控制训练样例序列
1. 训练样例的分布能多好地表示实例分布

西洋跳棋学习问题:
- 任务T: 下西洋跳棋
- 性能标准P: 世界锦标赛上击败对手的百分比
- 训练经验E: 和自己进行对弈

为了完成这个学习系统的设计, 现在需要选择:
1. 要学习的只是的确切类型
1. 对于真的目标只是的表示
1. 一种学习机制

###选择目标函数

为了学习从合法走子中做出选择, 很明显, 要学习的信息类型就是一个程序或函数, 它对任何给定的棋局能选出最好的走法: 
1. ChooseMove:B->M 来表示这个函数以合法棋局集合中的棋盘状态作为输入, 并从合法走子集合中产生某个走子作为输出
    > 此目标函数是非常困难的, 提供给系统的是间接训练经验

1. 另一个可供选择的目标函数是一个评估函数, V:B\to \Re来表示V吧任何合法的棋局映射到某一个实数值.
    需要发现一个可操作的定义V, 能够被西洋跳棋程序用来在合理的时间内评估棋局并选择走法
    通常要完美地学习一个这样的V的**可操作形式**是非常困难的, 我们仅仅希望学习算法得到**近似**的目标函数, 由于这个原因, 学习目标函数的过程常被称为**函数逼近**.

###选择目标函数的表示

1. x1 棋盘上黑子的数量
1. x2 棋盘上红字的数量
1. x3 棋盘上黑王的数量
1. x4 棋盘上红王的数量
1. x5 被红子威胁的黑子的数量
1. x6 被黑子威胁的红子的数量
\hat(V) (b)=\omega_0+\omega_1 x_1+\omega_2 x_2+\omega_3 x_3+\omega4 x_4+\omega_5 x_5+\omega_6 x_6

###选择函数逼近算法

为了学习目标函数\hat(V), 需要一系列


##

#[Machine Learning by Stanford](https://www.coursera.org/learn/machine-learning/home/welcome)

#Introduction

##Welcome

Machine Learning 
- Grew out of work in AI
- New capability for computers

Examples:
- Database mining

    Large datasets from growth of automation/web
    E.g., Web click data, medical records, biology, engineering

- Applications cannot program by hand

    E.g., Autonomous helicopter, handwriting recognition, most of Natural Language Processing(NLP), Computer Vision

- Self-customizing programs

    E.g., Amazon, Netflix product recommendations

- Understanding human learning (brain, real AI)

----

##What is Machine Learning

> Arthur Samuel described it as: "the field of study that gives computers the ability to learn without being explicitly programmed." This is an older, informal definition.

> Tom Mitchell provides a more modern definition: "A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E."

Example: playing checkers.

E = the experience of playing many games of checkers
T = the task of playing checkers.
P = the probability that the program will win the next game.


Machine learning algorithms:
- Supervised learning
- Unsupervised learning

Others: Reinforcement learning, recommender systems.

Also talk about: Practical advice for applying learning algorithms.

##Supervised Learning

in supervised learning, in every example in our data set, we are told what is the "correct answer" that we would have quite liked the algorithms have predicted on that example.

1. regression problem:

    the goal is to predict a continuous valued output.
1. classification problem:

    the goal is to predict a discrete value output.

----

##Unsupervised Learning

Unsupervised learning allows us to approach problems with little or no idea what our results should look like. We can derive structure from data where we don't necessarily know the effect of the variables.

We can derive this structure by clustering the data based on relationships among the variables in the data.

With unsupervised learning there is no feedback based on the prediction results.

Example:

Clustering: Take a collection of 1,000,000 different genes, and find a way to automatically group these genes into groups that are somehow similar or related by different variables, such as lifespan, location, roles, and so on.

Non-clustering: The "Cocktail Party Algorithm", allows you to find structure in a chaotic environment. (i.e. identifying individual voices and music from a mesh of sounds at a cocktail party).

----

#Model and Cost Function

##Model Representation

To establish notation for future use, we’ll use $$x^{(i)}$$ to denote the “input” variables (living area in this example), also called input features, and $$y^{(i)}$$ to denote the “output” or target variable that we are trying to predict (price). A pair $$(x^{(i)} , y^{(i)} )$$ is called a training example, and the dataset that we’ll be using to learn—a list of m training examples $${(x^{(i)} , y^{(i)} ); i = 1, . . . , m}$$—is called a training set. Note that the superscript “(i)” in the notation is simply an index into the training set, and has nothing to do with exponentiation. We will also use X to denote the space of input values, and Y to denote the space of output values. In this example, X = Y = ℝ. 

To describe the supervised learning problem slightly more formally, our goal is, given a training set, to learn a function h : X → Y so that h(x) is a “good” predictor for the corresponding value of y. For historical reasons, this function h is called a hypothesis. Seen pictorially, the process is therefore like this:

![Model Representation.png](./img/Machine Learning/Model Representation.png)

1. When the target variable that we’re trying to predict is continuous, such as in our housing example, we call the learning problem a regression problem. 
2. When y can take on only a small number of discrete values (such as if, given the living area, we wanted to predict if a dwelling is a house or an apartment, say), we call it a classification problem.

----

##Cost Function

We can measure the accuracy of our hypothesis function by using a cost function. This takes an average difference (actually a fancier version of an average) of all the results of the hypothesis with inputs from x's and the actual output y's.

![Cost Function.png](./img/Machine Learning/Cost Function.png)

To break it apart, it is 12 x¯ where x¯ is the mean of the squares of hθ(xi)−yi , or the difference between the predicted value and the actual value.




